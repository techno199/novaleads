{"version":3,"sources":["logo.svg","components/appBar/index.js","components/taskTable/index.js","helpers/db.js","helpers/const.js","components/autocomplete/index.js","components/taskEditor/index.js","components/snackBar/index.js","components/taskApp/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AppBar","title","this","props","react_default","a","createElement","index_es","variant","color","Component","AppBarStyled","withStyles","theme","TaskTable","handleEditBtnClick","data","event","_this","editClick","handleRemoveBtnClick","removeClick","_this2","_this$props","classes","columnNames","tasks","map","name","i","key","task","id","Object","keys","container","wrap","onClick","Edit_default","fontSize","isRemoveFetching","className","tableBtnContainer","size","Remove_default","TaskTableStyled","display","alignItems","justifyContent","width","height","TASK_STATUS_PROCESSING","DEFAULT_TAG_VALUES","createTask","status","taskName","taskDescription","completionDate","importance","tag","AutocompleteStyled","input","_ref","onChange","items","selectedItem","other","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","menuIsOpen","setMenuIsOpen","_useState3","_useState4","text","setText","handleInputChange","e","target","value","trim","downshift_esm","isOpen","downshift","assign","getInputProps","label","getMenuProps","filter","item","includes","getItemProps","index","EDITOR_VARIANT_CREATION","EDITOR_VARIANT_EDITING","TaskEditor","state","taskNameError","isFetching","importanceHidden","componentWillReceiveProps","nextProps","_nextProps$task$data","setState","handleChange","defineProperty","handleTaskNameChange","handleDateChange","handleTagChange","handleCancelClick","onCancel","modelStateIsValid","handleSaveClick","promise","onSave","then","_clearAllFields","_getTitle","_getSaveBtnText","open","_this$state","root","titleContainer","fieldsContainer","field","error","multiline","type","InputLabelProps","shrink","control","actionBtnContainer","progress","xs","actionBtn","TaskEditorStyled","position","flexDirection","padding","backgroundColor","paddingLeft","spacing","unit","paddingRight","flexGrow","maxHeight","overflow","marginBottom","marginTop","borderRadius","bottom","Snackbar","handleClose","reason","onClose","message","action","Close_default","closeIcon","SnackbarStyled","palette","dark","SNACK_DELAY","TaskApp","taskEditorCreationOpen","taskEditorEditingOpen","snackOpen","selectedTask","snackText","handleAddBtnClick","onAddClick","handleCancel","_showSnack","handleEditingCancel","delay","arguments","length","undefined","setTimeout","handleSave","_callee","newTask","regenerator_default","_context","prev","next","Promise","resolve","oldState","slice","push","stop","handleSnackClose","resason","handleRemoveClick","_callee2","_context2","newTasks","find","t","handleEditClick","handleEditingSave","_callee3","taskData","_context3","targetIndex","findIndex","addBtn","Add_default","TaskAppStyled","marginLeft","marginRight","paddingTop","right","App","appContainer","breakpoints","up","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2605a119.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\nimport { withStyles, Toolbar, Typography } from '@material-ui/core';\r\nimport { AppBar as MaterialAppBar } from '@material-ui/core'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nclass AppBar extends Component {\r\n  static propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    title: PropTypes.string\r\n  }\r\n\r\n  render() {\r\n    const { title } = this.props\r\n    return (\r\n      <MaterialAppBar>\r\n        <Toolbar>\r\n          <Typography variant='h6' color='inherit'>\r\n            {title}\r\n          </Typography>\r\n        </Toolbar>\r\n      </MaterialAppBar>\r\n    )\r\n  }\r\n}\r\n\r\nconst AppBarStyled = withStyles(styles)(AppBar)\r\n\r\nexport { AppBarStyled as AppBar }\r\n","import React, { Component } from 'react'\r\nimport { withStyles, Grid, Table, TableCell, TableRow, TableHead, TableBody, IconButton, CircularProgress } from '@material-ui/core';\r\nimport PropTypes from 'prop-types'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport RemoveIcon from '@material-ui/icons/Remove'\r\n\r\nconst styles = theme => ({\r\n  tableBtnContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: 44,\r\n    height: 44\r\n  }\r\n})\r\n\r\nclass TaskTable extends Component {\r\n  static propTypes = {\r\n    columnNames: PropTypes.array.isRequired,\r\n    tasks: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    editClick: PropTypes.func,\r\n    removeClick: PropTypes.func\r\n  }\r\n\r\n  handleEditBtnClick = data => event => {\r\n    this.props.editClick &&\r\n      this.props.editClick(data)\r\n  }\r\n\r\n  handleRemoveBtnClick = data => event => {\r\n    this.props.removeClick &&\r\n      this.props.removeClick(data)\r\n  }\r\n\r\n  render() {\r\n    const { classes, columnNames, tasks } = this.props\r\n\r\n    return (\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {\r\n              columnNames.map((name, i) => (\r\n                <TableCell key={i}>\r\n                  {name}\r\n                </TableCell>\r\n              ))\r\n            }\r\n            <TableCell>\r\n              Действия\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {\r\n            tasks.map(task => (\r\n              <TableRow key={task.data.id}>\r\n                {\r\n                  Object.keys(task.data).map((key, i) => (\r\n                    <TableCell key={i}>\r\n                      {task.data[key]}\r\n                    </TableCell>\r\n                  ))\r\n                }\r\n                <TableCell>\r\n                  <Grid container wrap='nowrap'>\r\n                    <IconButton onClick={this.handleEditBtnClick(task)}>\r\n                      <EditIcon fontSize='small'/>\r\n                    </IconButton>\r\n                    {\r\n                      task.isRemoveFetching ?\r\n                        <div className={classes.tableBtnContainer}>\r\n                          <CircularProgress size={32}/>\r\n                        </div>\r\n                      :\r\n                      <div className={classes.tableBtnContainer}>\r\n                        <IconButton onClick={this.handleRemoveBtnClick(task)}>\r\n                          <RemoveIcon fontSize='small'/>\r\n                        </IconButton>\r\n                      </div>\r\n                    }\r\n                  </Grid>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))\r\n          }\r\n        </TableBody>\r\n      </Table>\r\n    )\r\n  }\r\n}\r\n\r\nconst TaskTableStyled = withStyles(styles)(TaskTable)\r\n\r\nexport { TaskTableStyled as TaskTable }\r\n","let id = 0\r\n\r\nexport const getNextId = () => {\r\n  return id++\r\n}","import { getNextId } from \"./db\";\r\n\r\nexport const TASK_STATUS_PROCESSING = 'Выполняется'\r\nexport const TASK_STATUS_LATER = 'На потом'\r\nexport const TASK_STATUS_DONE = 'Выполнена'\r\nexport const DEFAULT_TAG_VALUES = [\r\n  'tag1',\r\n  'tag2',\r\n  'tag3',\r\n  'tag4',\r\n  'tag5'\r\n]\r\nexport const TASK_IMPORTANCE_1 = 'Срочная важная задача'\r\nexport const TASK_IMPORTANCE_2 = 'Срочная неважная задача'\r\nexport const TASK_IMPORTANCE_3 = 'Несрочная важная задача'\r\nexport const TASK_IMPORTANCE_4 = 'Несрочная неважная задача'\r\n\r\nexport const createTask = (status, taskName, taskDescription, completionDate, importance, tag) => {\r\n  return {\r\n    data: {\r\n      id: getNextId(), \r\n      status, \r\n      taskName, \r\n      taskDescription, \r\n      completionDate, \r\n      importance, \r\n      tag\r\n    },\r\n    isRemoveFetching: false\r\n  }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport Downshift from 'downshift'\r\nimport { TextField, Paper, MenuItem, withStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst styles = theme => ({\r\n  input: {\r\n    width: '100%'\r\n  }\r\n})\r\n\r\nconst Autocomplete = ({ onChange, classes, items, selectedItem, ...other }) => {\r\n  const [menuIsOpen, setMenuIsOpen] = useState(false)\r\n  const [text, setText] = useState('')\r\n\r\n  const handleInputChange = e => {\r\n    onChange &&\r\n      onChange(e.target.value)\r\n\r\n    setText(e.target.value)\r\n\r\n    if (e.target.value.trim()) {\r\n      setMenuIsOpen(true)\r\n    }\r\n    else {\r\n      setMenuIsOpen(false)\r\n    }\r\n  }\r\n\r\n  const handleSelectedValueChange = value => {\r\n    onChange &&   \r\n      onChange(value)\r\n\r\n    setMenuIsOpen(false)\r\n  }\r\n\r\n  return (\r\n    <Downshift\r\n      isOpen={menuIsOpen}\r\n      onChange={handleSelectedValueChange}\r\n    >\r\n    {\r\n      downshift => (\r\n        <div {...other}>\r\n          <TextField \r\n            {...downshift.getInputProps()} \r\n            label='Тэг' \r\n            className={classes.input}\r\n            onChange={handleInputChange}\r\n            value={selectedItem || text}\r\n          />\r\n          <Paper {...downshift.getMenuProps()}>\r\n          {\r\n            downshift.isOpen && (\r\n              items\r\n                .filter(item => item.includes(text) )\r\n                .map((item, i) => (\r\n                  <MenuItem\r\n                    {...downshift.getItemProps({\r\n                      key: item,\r\n                      index: i,\r\n                      item\r\n                    })}\r\n                  >\r\n                  {item}\r\n                  </MenuItem>\r\n                ))\r\n            )\r\n          }\r\n          </Paper>\r\n        </div>\r\n      )\r\n    }\r\n    </Downshift>\r\n  )\r\n}\r\n\r\nAutocomplete.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onChange: PropTypes.func,\r\n  items: PropTypes.array.isRequired,\r\n  selectedItem: PropTypes.string\r\n}\r\n\r\nconst AutocompleteStyled = withStyles(styles)(Autocomplete)\r\n\r\nexport { AutocompleteStyled as Autocomplete }","import React, { Component } from 'react'\r\nimport { withStyles, Drawer, Typography, TextField, Select, MenuItem, Grid, Button, LinearProgress, RadioGroup, FormControlLabel, Radio } from '@material-ui/core';\r\nimport PropTypes from 'prop-types'\r\nimport { TASK_STATUS_DONE, TASK_STATUS_LATER, TASK_STATUS_PROCESSING, DEFAULT_TAG_VALUES, TASK_IMPORTANCE_1, TASK_IMPORTANCE_3, TASK_IMPORTANCE_4, TASK_IMPORTANCE_2 } from '../../helpers/const';\r\nimport { Autocomplete } from '../autocomplete';\r\n\r\nconst EDITOR_VARIANT_CREATION = 'creation'\r\nconst EDITOR_VARIANT_EDITING = 'editing'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: 304,\r\n    position: 'relative',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  titleContainer: {\r\n    padding: 10,\r\n    backgroundColor: '#3f51b5',\r\n    color: 'white',\r\n    height: 80,\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  fieldsContainer: {\r\n    paddingLeft: theme.spacing.unit * 2,\r\n    paddingRight: theme.spacing.unit * 2,\r\n    flexGrow: 1,\r\n    maxHeight: '100%',\r\n    overflow: 'auto',\r\n    marginBottom: 72\r\n  },\r\n  field: {\r\n    width: '100%',\r\n    marginTop: 10,\r\n    marginBottom: 10\r\n  },\r\n  actionBtn: {\r\n    width: '100%',\r\n    height: '100%',\r\n    borderRadius: 0,\r\n    padding: theme.spacing.unit * 3\r\n  },\r\n  actionBtnContainer: {\r\n    position: 'absolute',\r\n    bottom: 0\r\n  },\r\n  progress: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    width: '100%'\r\n  }\r\n})\r\n\r\nclass TaskEditor extends Component {\r\n  static propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    onSave: PropTypes.func,\r\n    onCancel: PropTypes.func,\r\n    variant: PropTypes\r\n      .oneOf([\r\n        EDITOR_VARIANT_CREATION, \r\n        EDITOR_VARIANT_EDITING\r\n      ]).isRequired,\r\n    task: PropTypes.shape({\r\n      data: PropTypes.shape({\r\n        taskName: PropTypes.string.isRequired,\r\n        taskDescription: PropTypes.string,\r\n        completionDate: PropTypes.string,\r\n        status: PropTypes.string,\r\n        tag: PropTypes.string,\r\n        importance: PropTypes.string\r\n      }).isRequired\r\n    })\r\n  }\r\n\r\n  state = {\r\n    taskName: '',\r\n    taskNameError: false,\r\n    taskDescription: '',\r\n    completionDate: '',\r\n    status: TASK_STATUS_PROCESSING,\r\n    tag: '',\r\n    isFetching: false,\r\n    importance: '',\r\n    importanceHidden: true\r\n  }\r\n\r\n  componentWillReceiveProps = nextProps => {\r\n    if (nextProps.variant === EDITOR_VARIANT_EDITING &&\r\n      nextProps.task) {\r\n      let { \r\n        taskName, \r\n        taskDescription, \r\n        completionDate,\r\n        tag,\r\n        importance,\r\n        status\r\n      } = nextProps.task.data\r\n\r\n      this.setState({\r\n        taskName,\r\n        taskDescription,\r\n        completionDate,\r\n        tag,\r\n        importance,\r\n        status,\r\n        taskNameError: false,\r\n        importanceHidden: false\r\n      })\r\n    }\r\n  }\r\n\r\n  handleChange = name => event => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    })\r\n  }\r\n\r\n  handleTaskNameChange = e => {\r\n    this.setState({\r\n      taskName: e.target.value\r\n    })\r\n    if (e.target.value.trim()) {\r\n      this.setState({\r\n        taskNameError: false\r\n      })\r\n    }\r\n  }\r\n\r\n  handleDateChange = e => {\r\n    this.setState({\r\n      importanceHidden: false,\r\n      completionDate: e.target.value\r\n    })\r\n  }\r\n\r\n  handleTagChange = tag => {\r\n    this.setState({\r\n      tag\r\n    })\r\n  }\r\n\r\n  handleCancelClick = e => {\r\n    if (this.state.isFetching) return\r\n\r\n    this.props.onCancel &&\r\n      this.props.onCancel()\r\n  }\r\n\r\n  /**\r\n   * Validates all fields and hightlights them if neccessary.\r\n   * Returns true if model state is valid\r\n   */\r\n  modelStateIsValid = () => {\r\n    if (this.state.taskName.trim()) return true\r\n    \r\n    this.setState({\r\n      taskNameError: true\r\n    })\r\n\r\n    return false\r\n  }\r\n\r\n  handleSaveClick = e => {\r\n    if (!this.modelStateIsValid()) return\r\n\r\n    let task = {\r\n      status: this.state.status,\r\n      taskName: this.state.taskName,\r\n      taskDescription: this.state.taskDescription,\r\n      completionDate: this.state.completionDate,\r\n      importance: this.state.importance,\r\n      tag: this.state.tag\r\n    }\r\n\r\n    this.setState({\r\n      isFetching: true\r\n    })\r\n\r\n    let promise = this.props.onSave &&\r\n      this.props.onSave(task)\r\n\r\n    promise &&\r\n      promise\r\n        .then(() => {\r\n          this.setState({\r\n            isFetching: false\r\n          })\r\n          this._clearAllFields()\r\n        })\r\n  }\r\n\r\n  /**\r\n   * Vanishes all user input\r\n   */\r\n  _clearAllFields = () => {\r\n    this.setState({\r\n      taskName: '',\r\n      taskDescription: '',\r\n      completionDate: '',\r\n      status: TASK_STATUS_PROCESSING,\r\n      importanceHidden: true,\r\n      importance: '',\r\n      tag: ''\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Returns title of editor based on declared editor variant\r\n   */\r\n  _getTitle = () => {\r\n    switch (this.props.variant) {\r\n      case EDITOR_VARIANT_CREATION:\r\n        return 'Новая задача'\r\n      case EDITOR_VARIANT_EDITING:\r\n        return 'Редактирование'\r\n      default:\r\n        return ''\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns save button text based on declared editor variant\r\n   */\r\n  _getSaveBtnText = () => {\r\n    switch (this.props.variant) {\r\n      case EDITOR_VARIANT_CREATION:\r\n        return 'Создать'\r\n      case EDITOR_VARIANT_EDITING:\r\n        return 'Сохранить'\r\n      default:\r\n        return ''\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      open, \r\n      classes\r\n    } = this.props\r\n    const { \r\n      taskName, \r\n      taskDescription, \r\n      completionDate, \r\n      status,\r\n      isFetching, \r\n      importanceHidden, \r\n      importance, \r\n      taskNameError,\r\n      tag\r\n    } = this.state\r\n\r\n    return (\r\n      <Drawer open={open}>\r\n        <div className={classes.root}>\r\n          <div className={classes.titleContainer}>\r\n            <Typography variant='h6' color='inherit'>\r\n              {\r\n                this._getTitle()\r\n              }\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.fieldsContainer}>\r\n            <TextField\r\n              value={taskName}\r\n              onChange={this.handleTaskNameChange}\r\n              className={classes.field}\r\n              variant='outlined'\r\n              label='Название'\r\n              error={taskNameError}\r\n            />\r\n            <TextField\r\n              variant='outlined'\r\n              onChange={this.handleChange('taskDescription')}\r\n              multiline\r\n              label='Описание'\r\n              className={classes.field}\r\n              value={taskDescription}\r\n            />\r\n            <TextField\r\n              label='Дата завершения'\r\n              type='date'\r\n              value={completionDate}\r\n              onChange={this.handleDateChange}\r\n              className={classes.field}\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n            />\r\n            {\r\n              !importanceHidden &&\r\n              <RadioGroup\r\n                value={importance}\r\n                onChange={this.handleChange('importance')}\r\n              >\r\n                <FormControlLabel value={TASK_IMPORTANCE_1} control={<Radio />} label={TASK_IMPORTANCE_1} />\r\n                <FormControlLabel value={TASK_IMPORTANCE_2} control={<Radio />} label={TASK_IMPORTANCE_2} />\r\n                <FormControlLabel value={TASK_IMPORTANCE_3} control={<Radio />} label={TASK_IMPORTANCE_3} />\r\n                <FormControlLabel value={TASK_IMPORTANCE_4} control={<Radio />} label={TASK_IMPORTANCE_4} />\r\n              </RadioGroup>\r\n            }\r\n            <Select\r\n              className={classes.field}\r\n              value={status}\r\n              onChange={this.handleChange('status')}\r\n            >\r\n              <MenuItem value={TASK_STATUS_DONE}>{TASK_STATUS_DONE}</MenuItem>\r\n              <MenuItem value={TASK_STATUS_LATER}>{TASK_STATUS_LATER}</MenuItem>\r\n              <MenuItem value={TASK_STATUS_PROCESSING}>{TASK_STATUS_PROCESSING}</MenuItem>\r\n            </Select>\r\n            <Autocomplete\r\n              selectedItem={tag}\r\n              items={DEFAULT_TAG_VALUES}  \r\n              className={classes.field} \r\n              onChange={this.handleTagChange}\r\n            />\r\n          </div>\r\n          <Grid \r\n            container \r\n            className={classes.actionBtnContainer}\r\n          >\r\n            {\r\n              isFetching &&\r\n              <LinearProgress className={classes.progress} />\r\n            }\r\n            <Grid item xs={6}>\r\n              <Button\r\n                className={classes.actionBtn} \r\n                onClick={this.handleSaveClick}\r\n              >\r\n                {\r\n                  this._getSaveBtnText()\r\n                }\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Button \r\n                className={classes.actionBtn} \r\n                onClick={this.handleCancelClick}\r\n              >\r\n                Отмена\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Drawer>\r\n    )\r\n  }\r\n}\r\n\r\nconst TaskEditorStyled = withStyles(styles)(TaskEditor)\r\n\r\nexport { TaskEditorStyled as TaskEditor }\r\n","import React, { Component } from 'react'\r\nimport { withStyles, Snackbar as MaterialSnackbar, SnackbarContent, IconButton } from '@material-ui/core';\r\nimport PropTypes from 'prop-types'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nconst styles = theme => ({\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark\r\n  },\r\n  closeIcon: {\r\n    fontSize: 20\r\n  }\r\n})\r\n\r\nclass Snackbar extends Component {\r\n  static propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func,\r\n    message: PropTypes.string,\r\n    variant: PropTypes.oneOf(['error']).isRequired,\r\n  }\r\n  \r\n  handleClose = (event, reason) => {\r\n      this.props.onClose &&\r\n      this.props.onClose(event, reason)\r\n  }\r\n\r\n  render() {\r\n    const { classes, message, variant, ...other } = this.props\r\n    return (\r\n      <MaterialSnackbar \r\n        {...other}\r\n        onClose={this.handleClose}\r\n      >\r\n        <SnackbarContent\r\n          className={classes[variant]}\r\n          message={\r\n            <span className={classes.message}>\r\n              {message}\r\n            </span>\r\n          }\r\n          action={[\r\n            <IconButton\r\n              key='close'\r\n              color='inherit'\r\n              onClick={this.handleClose}\r\n            >\r\n              <CloseIcon className={classes.closeIcon}/>\r\n            </IconButton>\r\n          ]}\r\n        >\r\n        </SnackbarContent>\r\n      </MaterialSnackbar>\r\n    )\r\n  }\r\n}\r\n\r\nconst SnackbarStyled = withStyles(styles)(Snackbar)\r\n\r\nexport { SnackbarStyled as Snackbar }\r\n","import React, { Component } from 'react'\r\nimport { withStyles, Grid, Fab } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport PropTypes from 'prop-types'\r\nimport { TaskTable } from '../taskTable';\r\nimport { TaskEditor } from '../taskEditor';\r\nimport { Snackbar } from '../snackBar';\r\nimport { createTask } from '../../helpers/const';\r\n\r\nconst SNACK_DELAY = 1777\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    marginLeft: theme.spacing.unit * 2,\r\n    marginRight: theme.spacing.unit * 2,\r\n    paddingTop: theme.spacing.unit * 2,\r\n    position: 'relative',\r\n    height: '100%'\r\n  },\r\n  addBtn: {\r\n    position: 'fixed',\r\n    right: theme.spacing.unit * 4,\r\n    bottom: theme.spacing.unit * 4\r\n  }\r\n})\r\n\r\nclass TaskApp extends Component {\r\n  static propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    onAddClick: PropTypes.func\r\n  }\r\n\r\n  state = {\r\n    taskEditorCreationOpen: false,\r\n    taskEditorEditingOpen: false,\r\n    snackOpen: false,\r\n    tasks: [],\r\n    selectedTask: null,\r\n    snackText: ''\r\n  }\r\n\r\n  handleAddBtnClick = event => {\r\n    this.onAddClick &&\r\n    this.onAddClick()\r\n\r\n    this.setState({\r\n      taskEditorCreationOpen: true\r\n    })\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      taskEditorCreationOpen: false,\r\n      snackOpen: true\r\n    })\r\n\r\n    this._showSnack('Задача не сохранена')\r\n  }\r\n\r\n  handleEditingCancel = () => {\r\n    this.setState({\r\n      taskEditorEditingOpen: false,\r\n      selectedTask: null\r\n    })\r\n\r\n    this._showSnack('Изменения не сохранены')\r\n  }\r\n\r\n  _showSnack = (text, delay = SNACK_DELAY) => {\r\n    this.setState({\r\n      snackOpen: true,\r\n      snackText: text\r\n    })\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        snackOpen: false,\r\n        snackText: ''\r\n      })\r\n    }, delay)\r\n  }\r\n\r\n  handleSave = async task => {\r\n    let newTask = createTask(\r\n      task.status,\r\n      task.taskName,\r\n      task.taskDescription,\r\n      task.completionDate,\r\n      task.importance,\r\n      task.tag\r\n    )\r\n\r\n    await new Promise(resolve => setTimeout(resolve, 2000));\r\n    this.setState(oldState => {\r\n      let tasks = oldState.tasks.slice();\r\n      tasks.push(newTask);\r\n      return {\r\n        tasks,\r\n        taskEditorCreationOpen: false\r\n      };\r\n    });\r\n  }\r\n\r\n  handleSnackClose = (event, resason) => {\r\n    if (resason === 'clickaway') return\r\n\r\n    this.setState({\r\n      snackOpen: false\r\n    })\r\n  }\r\n\r\n  handleRemoveClick = async task => {\r\n    this.setState(oldState => {\r\n      let newTasks = oldState.tasks.slice()\r\n      let targetTask = newTasks.find(t => t.data.id == task.data.id)\r\n\r\n      targetTask.isRemoveFetching = true\r\n\r\n      return {\r\n        newTasks\r\n      }\r\n    })\r\n\r\n    await new Promise(resolve => setTimeout(resolve, 2000))\r\n\r\n    this.setState(oldState => {\r\n      let newTasks = oldState.tasks\r\n        .slice()\r\n        .filter(t => t.data.id !== task.data.id);\r\n\r\n      return {\r\n        tasks: newTasks\r\n      };\r\n    });\r\n  }\r\n\r\n  handleEditClick = task => {\r\n    this.setState({\r\n      taskEditorEditingOpen: true,\r\n      selectedTask: task\r\n    })\r\n  }\r\n\r\n  handleEditingSave = async taskData => {\r\n    await new Promise(resolve => setTimeout(resolve, 2000))\r\n\r\n    this.setState(oldState => {\r\n      let newTasks = oldState.tasks.slice()\r\n      let selectedTask = oldState.selectedTask\r\n\r\n      let targetIndex = newTasks.findIndex(t => t.data.id === taskData.id)\r\n      // Provide selected task with new values\r\n      selectedTask.data = Object.assign(selectedTask.data, taskData)\r\n      \r\n      newTasks[targetIndex] = oldState.selectedTask\r\n\r\n      return {\r\n        tasks: newTasks,\r\n        taskEditorEditingOpen: false\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n    const { \r\n      taskEditorCreationOpen, \r\n      tasks, \r\n      snackOpen, \r\n      selectedTask, \r\n      taskEditorEditingOpen, \r\n      snackText \r\n    } = this.state\r\n\r\n    let columnNames = [\r\n      'id', \r\n      'Статус', \r\n      'Название задачи', \r\n      'Описание задачи', \r\n      'Дата выполнения', \r\n      'Важность', \r\n      'Тэг'\r\n    ]\r\n    \r\n    return (\r\n      <Grid className={classes.root}>\r\n        <TaskEditor \r\n          variant='creation'\r\n          open={taskEditorCreationOpen} \r\n          onSave={this.handleSave} \r\n          onCancel={this.handleCancel}\r\n        />\r\n        <TaskEditor\r\n          open={taskEditorEditingOpen}\r\n          variant='editing'\r\n          task={selectedTask}\r\n          onSave={this.handleEditingSave}\r\n          onCancel={this.handleEditingCancel}\r\n        />\r\n        <TaskTable \r\n          columnNames={columnNames} \r\n          tasks={tasks}\r\n          removeClick={this.handleRemoveClick}\r\n          editClick={this.handleEditClick}\r\n        />\r\n        <Snackbar \r\n          open={snackOpen} \r\n          variant='error'\r\n          message={snackText} \r\n          onClose={this.handleSnackClose}\r\n        />\r\n        <Fab \r\n          color='secondary' \r\n          size='medium' \r\n          className={classes.addBtn} \r\n          onClick={this.handleAddBtnClick}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nconst TaskAppStyled = withStyles(styles)(TaskApp)\r\n\r\nexport { TaskAppStyled as TaskApp }\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { AppBar } from './components/appBar';\nimport { TaskApp } from './components/taskApp';\nimport { withStyles } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    height: '100vh'\n  },\n  appContainer: {\n    paddingTop: 56,\n    height: '100%',\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: 64\n    }\n  }\n})\n\nclass App extends Component {\n  render() {\n    const { classes } = this.props\n    return (\n      <div className={classes.root}>\n        <AppBar title=\"Список задач\" />\n        <div className={classes.appContainer}>\n          <TaskApp />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { CssBaseline } from '@material-ui/core'\n\nReactDOM.render(\n  <React.Fragment>\n    <CssBaseline />\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}