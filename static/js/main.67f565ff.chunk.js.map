{"version":3,"sources":["logo.svg","components/appBar/index.js","components/taskTable/index.js","helpers/db.js","helpers/const.js","components/autocomplete/index.js","components/taskEditor/index.js","components/snackBar/index.js","components/taskApp/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AppBar","handleAddClick","_this","props","onAddClick","_this$props","this","title","classes","react_default","a","createElement","index_es","position","variant","color","className","fabBtn","size","onClick","Add_default","Component","AppBarStyled","withStyles","theme","_fabBtn","Object","defineProperty","breakpoints","up","display","TaskTable","handleEditBtnClick","data","event","editClick","handleRemoveBtnClick","removeClick","_this2","columnNames","tasks","map","name","i","key","task","id","keys","container","wrap","Edit_default","fontSize","isRemoveFetching","tableBtnContainer","Remove_default","TaskTableStyled","alignItems","justifyContent","width","height","TASK_STATUS_PROCESSING","DEFAULT_TAG_VALUES","createTask","status","taskName","taskDescription","completionDate","importance","tag","AutocompleteStyled","input","_ref","onChange","items","selectedItem","other","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","menuIsOpen","setMenuIsOpen","handleInputChange","e","target","value","trim","handleKeyDown","keyCode","downshift_esm","isOpen","onSelect","onOuterClick","filter","includes","length","downshift","assign","getInputProps","label","onKeyDown","getMenuProps","item","getItemProps","index","EDITOR_VARIANT_CREATION","EDITOR_VARIANT_EDITING","TaskEditor","state","taskNameError","isFetching","importanceHidden","componentWillReceiveProps","nextProps","_nextProps$task$data","setState","handleChange","handleTaskNameChange","handleDateChange","handleTagChange","handleCancelClick","onCancel","modelStateIsValid","handleSaveClick","promise","onSave","then","_clearAllFields","_getTitle","_getSaveBtnText","open","_this$state","root","titleContainer","fieldsContainer","field","error","multiline","type","InputLabelProps","shrink","control","actionBtnContainer","progress","xs","actionBtn","TaskEditorStyled","flexDirection","padding","backgroundColor","paddingLeft","spacing","unit","paddingRight","flexGrow","maxHeight","overflow","marginBottom","marginTop","borderRadius","bottom","Snackbar","handleClose","reason","onClose","message","action","Close_default","closeIcon","SnackbarStyled","palette","dark","SNACK_DELAY","TaskApp","taskEditorCreationOpen","taskEditorEditingOpen","snackOpen","selectedTask","snackText","componentDidMount","creationEditorOpen","handleAddBtnClick","handleCancel","onEditorClose","_showSnack","handleEditingCancel","text","delay","arguments","undefined","setTimeout","handleSave","_callee","newTask","regenerator_default","_context","prev","next","Promise","resolve","oldState","onCreateAddClick","slice","push","stop","handleSnackClose","resason","handleRemoveClick","_callee2","_context2","newTasks","find","t","handleEditClick","handleEditingSave","_callee3","taskData","_context3","targetIndex","findIndex","addBtn","TaskAppStyled","_addBtn","marginLeft","marginRight","paddingTop","down","App","handleEditorClose","appContainer","overflowX","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8OCkBlCC,6MAUJC,eAAiB,WACfC,EAAKC,MAAMC,YACTF,EAAKC,MAAMC,sFAGN,IAAAC,EACoBC,KAAKH,MAAxBI,EADDF,EACCE,MAAOC,EADRH,EACQG,QACf,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAgBC,SAAS,YACvBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYE,QAAQ,KAAKC,MAAM,WAC5BR,GAEHE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEG,MAAM,YACNC,UAAWR,EAAQS,OACnBC,KAAK,SACLC,QAASb,KAAKL,gBAEdQ,EAAAC,EAAAC,cAACS,EAAAV,EAAD,gBA7BSW,aAqCfC,EAAeC,qBAjDN,SAAAC,GAAK,IAAAC,EAAA,MAAK,CACvBR,QAAMQ,EAAA,GAAAC,OAAAC,EAAA,EAAAD,CAAAD,EACHD,EAAMI,YAAYC,GAAG,MAAQ,CAC5BC,QAAS,SAFPJ,OAAAC,EAAA,EAAAD,CAAAD,EAAA,UAIK,SAJLC,OAAAC,EAAA,EAAAD,CAAAD,EAAA,WAKM,YALNC,OAAAC,EAAA,EAAAD,CAAAD,EAAA,OAME,oBANFC,OAAAC,EAAA,EAAAD,CAAAD,EAAA,UAOK,IAPLA,KAgDaF,CAAmBvB,gECvClC+B,6MAQJC,mBAAqB,SAAAC,GAAI,OAAI,SAAAC,GAC3BhC,EAAKC,MAAMgC,WACTjC,EAAKC,MAAMgC,UAAUF,OAGzBG,qBAAuB,SAAAH,GAAI,OAAI,SAAAC,GAC7BhC,EAAKC,MAAMkC,aACTnC,EAAKC,MAAMkC,YAAYJ,6EAGlB,IAAAK,EAAAhC,KAAAD,EACiCC,KAAKH,MAArCK,EADDH,EACCG,QAAS+B,EADVlC,EACUkC,YAAaC,EADvBnC,EACuBmC,MAE9B,OACE/B,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAEI2B,EAAYE,IAAI,SAACC,EAAMC,GAAP,OACdlC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWgC,IAAKD,GACbD,KAIPjC,EAAAC,EAAAC,cAACC,EAAA,EAAD,2DAKJH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAEI4B,EAAMC,IAAI,SAAAI,GAAI,OACZpC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUgC,IAAKC,EAAKZ,KAAKa,IAErBpB,OAAOqB,KAAKF,EAAKZ,MAAMQ,IAAI,SAACG,EAAKD,GAAN,OACzBlC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWgC,IAAKD,GACbE,EAAKZ,KAAKW,MAIjBnC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoC,WAAS,EAACC,KAAK,UACnBxC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYO,QAASmB,EAAKN,mBAAmBa,IAC3CpC,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,CAAUyC,SAAS,WAGnBN,EAAKO,iBACH3C,EAAAC,EAAAC,cAAA,OAAKK,UAAWR,EAAQ6C,mBACtB5C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkBM,KAAM,MAG5BT,EAAAC,EAAAC,cAAA,OAAKK,UAAWR,EAAQ6C,mBACtB5C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYO,QAASmB,EAAKF,qBAAqBS,IAC7CpC,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAD,CAAYyC,SAAS,0BA7DvB9B,aA4ElBkC,EAAkBhC,qBAtFT,SAAAC,GAAK,MAAK,CACvB6B,kBAAmB,CACjBvB,QAAS,OACT0B,WAAY,SACZC,eAAgB,SAChBC,MAAO,GACPC,OAAQ,MAgFYpC,CAAmBQ,GC5FvCe,EAAK,ECEIc,EAAyB,qEAGzBC,EAAqB,CAChC,sBACA,sBACA,sBACA,uBAOWC,EAAa,SAACC,EAAQC,EAAUC,EAAiBC,EAAgBC,EAAYC,GACxF,MAAO,CACLnC,KAAM,CACJa,GDhBGA,ICiBHiB,SACAC,WACAC,kBACAC,iBACAC,aACAC,OAEFhB,kBAAkB,8BCwEhBiB,EAAqB9C,qBA9FZ,SAAAC,GAAK,MAAK,CACvB8C,MAAO,CACLZ,MAAO,UA4FgBnC,CAxFN,SAAAgD,GAA0D,IAAvDC,EAAuDD,EAAvDC,SAAUhE,EAA6C+D,EAA7C/D,QAASiE,EAAoCF,EAApCE,MAAOC,EAA6BH,EAA7BG,aAAiBC,EAAYjD,OAAAkD,EAAA,EAAAlD,CAAA6C,EAAA,+CAAAM,EACzCC,oBAAS,GADgCC,EAAArD,OAAAsD,EAAA,EAAAtD,CAAAmD,EAAA,GACtEI,EADsEF,EAAA,GAC1DG,EAD0DH,EAAA,GAGvEI,EAAoB,SAAAC,GACxBZ,GACEA,EAASY,EAAEC,OAAOC,OAEhBF,EAAEC,OAAOC,MAAMC,OACjBL,GAAc,GAGdA,GAAc,IAWZM,EAAgB,SAAAJ,GACF,KAAdA,EAAEK,SACJP,GAAc,IAclB,OACEzE,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CACEC,OAAQV,EACRW,SA1BiB,SAAAN,GACnBd,GACEA,EAASc,GAEXJ,GAAc,IAuBZW,aAVoB,WAClBpB,EAAMqB,OAAO,SAAAnD,GAAC,OAAIA,EAAEoD,SAASrB,KAAesB,OAAS,GACvDd,GAAc,KAWd,SAAAe,GAAS,OACPxF,EAAAC,EAAAC,cAAA,MAASgE,EACPlE,EAAAC,EAAAC,cAACC,EAAA,EAADc,OAAAwE,OAAA,GACMD,EAAUE,gBADhB,CAEEC,MAAM,qBACNpF,UAAWR,EAAQ8D,MACnBE,SAAUW,EACVkB,UAAWb,EACXF,MAAOZ,KAETjE,EAAAC,EAAAC,cAACC,EAAA,EAAUqF,EAAUK,eAEnBL,EAAUN,QACRlB,EACGqB,OAAO,SAAAS,GAAI,OAAIA,EAAKR,SAASrB,KAC7BjC,IAAI,SAAC8D,EAAM5D,GAAP,OACHlC,EAAAC,EAAAC,cAACC,EAAA,EACKqF,EAAUO,aAAa,CACzB5D,IAAK2D,EACLE,MAAO9D,EACP4D,SAGHA,WCzEbG,EAA0B,WAC1BC,EAAyB,UAgDzBC,6MAsBJC,MAAQ,CACN7C,SAAU,GACV8C,eAAe,EACf7C,gBAAiB,GACjBC,eAAgB,GAChBH,OAAQH,EACRQ,IAAK,GACL2C,YAAY,EACZ5C,WAAY,GACZ6C,kBAAkB,KAGpBC,0BAA4B,SAAAC,GAC1B,GAAIA,EAAUpG,UAAY6F,GACxBO,EAAUrE,KAAM,KAAAsE,EAQZD,EAAUrE,KAAKZ,KANjB+B,EAFcmD,EAEdnD,SACAC,EAHckD,EAGdlD,gBACAC,EAJciD,EAIdjD,eACAE,EALc+C,EAKd/C,IACAD,EANcgD,EAMdhD,WACAJ,EAPcoD,EAOdpD,OAGF7D,EAAKkH,SAAS,CACZpD,WACAC,kBACAC,iBACAE,MACAD,aACAJ,SACA+C,eAAe,EACfE,kBAAkB,QAKxBK,aAAe,SAAA3E,GAAI,OAAI,SAAAR,GACrBhC,EAAKkH,SAAL1F,OAAAC,EAAA,EAAAD,CAAA,GACGgB,EAAOR,EAAMmD,OAAOC,YAIzBgC,qBAAuB,SAAAlC,GACrBlF,EAAKkH,SAAS,CACZpD,SAAUoB,EAAEC,OAAOC,QAEjBF,EAAEC,OAAOC,MAAMC,QACjBrF,EAAKkH,SAAS,CACZN,eAAe,OAKrBS,iBAAmB,SAAAnC,GACjBlF,EAAKkH,SAAS,CACZJ,kBAAkB,EAClB9C,eAAgBkB,EAAEC,OAAOC,WAI7BkC,gBAAkB,SAAApD,GAChBlE,EAAKkH,SAAS,CACZhD,WAIJqD,kBAAoB,SAAArC,GACdlF,EAAK2G,MAAME,YAEf7G,EAAKC,MAAMuH,UACTxH,EAAKC,MAAMuH,cAOfC,kBAAoB,WAClB,QAAIzH,EAAK2G,MAAM7C,SAASuB,SAExBrF,EAAKkH,SAAS,CACZN,eAAe,KAGV,MAGTc,gBAAkB,SAAAxC,GAChB,GAAKlF,EAAKyH,oBAAV,CAEA,IAAI9E,EAAO,CACTkB,OAAQ7D,EAAK2G,MAAM9C,OACnBC,SAAU9D,EAAK2G,MAAM7C,SACrBC,gBAAiB/D,EAAK2G,MAAM5C,gBAC5BC,eAAgBhE,EAAK2G,MAAM3C,eAC3BC,WAAYjE,EAAK2G,MAAM1C,WACvBC,IAAKlE,EAAK2G,MAAMzC,KAGlBlE,EAAKkH,SAAS,CACZL,YAAY,IAGd,IAAIc,EAAU3H,EAAKC,MAAM2H,QACvB5H,EAAKC,MAAM2H,OAAOjF,GAEpBgF,GACEA,EACGE,KAAK,WACJ7H,EAAKkH,SAAS,CACZL,YAAY,IAEd7G,EAAK8H,wBAObA,gBAAkB,WAChB9H,EAAKkH,SAAS,CACZpD,SAAU,GACVC,gBAAiB,GACjBC,eAAgB,GAChBH,OAAQH,EACRoD,kBAAkB,EAClB7C,WAAY,GACZC,IAAK,QAOT6D,UAAY,WACV,OAAQ/H,EAAKC,MAAMW,SACjB,KAAK4F,EACH,MAAO,sEACT,KAAKC,EACH,MAAO,uFACT,QACE,MAAO,OAObuB,gBAAkB,WAChB,OAAQhI,EAAKC,MAAMW,SACjB,KAAK4F,EACH,MAAO,6CACT,KAAKC,EACH,MAAO,yDACT,QACE,MAAO,6EAIJ,IAAAtG,EAIHC,KAAKH,MAFPgI,EAFK9H,EAEL8H,KACA3H,EAHKH,EAGLG,QAHK4H,EAeH9H,KAAKuG,MATP7C,EANKoE,EAMLpE,SACAC,EAPKmE,EAOLnE,gBACAC,EARKkE,EAQLlE,eACAH,EATKqE,EASLrE,OACAgD,EAVKqB,EAULrB,WACAC,EAXKoB,EAWLpB,iBACA7C,EAZKiE,EAYLjE,WACA2C,EAbKsB,EAaLtB,cACA1C,EAdKgE,EAcLhE,IAGF,OACE3D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQuH,KAAMA,GACZ1H,EAAAC,EAAAC,cAAA,OAAKK,UAAWR,EAAQ6H,MACtB5H,EAAAC,EAAAC,cAAA,OAAKK,UAAWR,EAAQ8H,gBACtB7H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYE,QAAQ,KAAKC,MAAM,WAE3BT,KAAK2H,cAIXxH,EAAAC,EAAAC,cAAA,OAAKK,UAAWR,EAAQ+H,iBACtB9H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0E,MAAOtB,EACPQ,SAAUlE,KAAKgH,qBACftG,UAAWR,EAAQgI,MACnB1H,QAAQ,WACRsF,MAAM,mDACNqC,MAAO3B,IAETrG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEE,QAAQ,WACR0D,SAAUlE,KAAK+G,aAAa,mBAC5BqB,WAAS,EACTtC,MAAM,mDACNpF,UAAWR,EAAQgI,MACnBlD,MAAOrB,IAETxD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwF,MAAM,wFACNuC,KAAK,OACLrD,MAAOpB,EACPM,SAAUlE,KAAKiH,iBACfvG,UAAWR,EAAQgI,MACnBI,gBAAiB,CACfC,QAAQ,MAIT7B,GACDvG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0E,MAAOnB,EACPK,SAAUlE,KAAK+G,aAAa,eAE5B5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkB0E,MF9RD,uHE8R2BwD,QAASrI,EAAAC,EAAAC,cAACC,EAAA,EAAD,MAAWwF,MF9R/C,yHE+RjB3F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkB0E,MF9RD,mIE8R2BwD,QAASrI,EAAAC,EAAAC,cAACC,EAAA,EAAD,MAAWwF,MF9R/C,qIE+RjB3F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkB0E,MF9RD,mIE8R2BwD,QAASrI,EAAAC,EAAAC,cAACC,EAAA,EAAD,MAAWwF,MF9R/C,qIE+RjB3F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkB0E,MF9RD,+IE8R2BwD,QAASrI,EAAAC,EAAAC,cAACC,EAAA,EAAD,MAAWwF,MF9R/C,kJEiSrB3F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEI,UAAWR,EAAQgI,MACnBlD,MAAOvB,EACPS,SAAUlE,KAAK+G,aAAa,WAE5B5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAU0E,MFhTQ,oHEiTlB7E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAU0E,MFlTS,8FEmTnB7E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAU0E,MAAO1B,GAAyBA,IAE5CnD,EAAAC,EAAAC,cAAC0D,EAAD,CACEK,aAAcN,EACdK,MAAOZ,EACP7C,UAAWR,EAAQgI,MACnBhE,SAAUlE,KAAKkH,mBAGnB/G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoC,WAAS,EACThC,UAAWR,EAAQuI,oBAGjBhC,GACAtG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAgBI,UAAWR,EAAQwI,WAErCvI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM2F,MAAI,EAAC0C,GAAI,GACbxI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEI,UAAWR,EAAQ0I,UACnB/H,QAASb,KAAKsH,iBAGZtH,KAAK4H,oBAIXzH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM2F,MAAI,EAAC0C,GAAI,GACbxI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEI,UAAWR,EAAQ0I,UACnB/H,QAASb,KAAKmH,mBAFhB,mDA3RWpG,aAySnB8H,EAAmB5H,qBAvVV,SAAAC,GAAK,MAAK,CACvB6G,KAAM,CACJ3E,MAAO,IACP7C,SAAU,WACV8C,OAAQ,OACR7B,QAAS,OACTsH,cAAe,UAEjBd,eAAgB,CACde,QAAS,GACTC,gBAAiB,UACjBvI,MAAO,QACP4C,OAAQ,GACR7B,QAAS,OACT0B,WAAY,UAEd+E,gBAAiB,CACfgB,YAAkC,EAArB/H,EAAMgI,QAAQC,KAC3BC,aAAmC,EAArBlI,EAAMgI,QAAQC,KAC5BE,SAAU,EACVC,UAAW,OACXC,SAAU,OACVC,aAAc,IAEhBtB,MAAO,CACL9E,MAAO,OACPqG,UAAW,GACXD,aAAc,IAEhBZ,UAAW,CACTxF,MAAO,OACPC,OAAQ,OACRqG,aAAc,EACdX,QAA8B,EAArB7H,EAAMgI,QAAQC,MAEzBV,mBAAoB,CAClBlI,SAAU,WACVoJ,OAAQ,GAEVjB,SAAU,CACRnI,SAAU,WACVoJ,OAAQ,EACRvG,MAAO,UA6ScnC,CAAmBqF,qBC9UtCsD,6MAQJC,YAAc,SAACjI,EAAOkI,GAClBlK,EAAKC,MAAMkK,SACXnK,EAAKC,MAAMkK,QAAQnI,EAAOkI,4EAGrB,IAAA/J,EACyCC,KAAKH,MAA7CK,EADDH,EACCG,QAAS8J,EADVjK,EACUiK,QAASxJ,EADnBT,EACmBS,QAAY6D,EAD/BjD,OAAAkD,EAAA,EAAAlD,CAAArB,EAAA,iCAEP,OACEI,EAAAC,EAAAC,cAACC,EAAA,EAADc,OAAAwE,OAAA,GACMvB,EADN,CAEE0F,QAAS/J,KAAK6J,cAEd1J,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEI,UAAWR,EAAQM,GACnBwJ,QACE7J,EAAAC,EAAAC,cAAA,QAAMK,UAAWR,EAAQ8J,SACtBA,GAGLC,OAAQ,CACN9J,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgC,IAAI,QACJ7B,MAAM,UACNI,QAASb,KAAK6J,aAEd1J,EAAAC,EAAAC,cAAC6J,EAAA9J,EAAD,CAAWM,UAAWR,EAAQiK,wBAjCrBpJ,aA2CjBqJ,EAAiBnJ,qBAxDR,SAAAC,GAAK,MAAK,CACvB8I,QAAS,CACPxI,QAAS,OACT0B,WAAY,UAEdiF,MAAO,CACLa,gBAAiB9H,EAAMmJ,QAAQlC,MAAMmC,MAEvCH,UAAW,CACTtH,SAAU,MA+CS5B,CAAmB2I,GCpDpCW,EAAc,KAoBdC,6MAiBJjE,MAAQ,CACNkE,wBAAwB,EACxBC,uBAAuB,EACvBC,WAAW,EACXzI,MAAO,GACP0I,aAAc,KACdC,UAAW,MAGbC,kBAAoB,WAGdlL,EAAKC,MAAMkL,oBACbnL,EAAKkH,SAAS,CACZ2D,uBAAwB7K,EAAKC,MAAMkL,wBAKzCpE,0BAA4B,SAAAC,GAGtBA,EAAUmE,oBACZnL,EAAKkH,SAAS,CACZ2D,uBAAwB7D,EAAUmE,wBAKxCC,kBAAoB,SAAApJ,GAClBhC,EAAKE,YACHF,EAAKE,aAEPF,EAAKkH,SAAS,CACZ2D,wBAAwB,OAI5BQ,aAAe,WACbrL,EAAKC,MAAMqL,eACTtL,EAAKC,MAAMqL,gBAEbtL,EAAKkH,SAAS,CACZ2D,wBAAwB,EACxBE,WAAW,IAGb/K,EAAKuL,WAAW,+GAGlBC,oBAAsB,WACpBxL,EAAKkH,SAAS,CACZ4D,uBAAuB,EACvBE,aAAc,OAGhBhL,EAAKuL,WAAW,iIAGlBA,WAAa,SAACE,GAA8B,IAAxBC,EAAwBC,UAAA7F,OAAA,QAAA8F,IAAAD,UAAA,GAAAA,UAAA,GAAhBhB,EAC1B3K,EAAKkH,SAAS,CACZ6D,WAAW,EACXE,UAAWQ,IAGbI,WAAW,WACT7L,EAAKkH,SAAS,CACZ6D,WAAW,EACXE,UAAW,MAEZS,MAGLI,iDAAa,SAAAC,EAAMpJ,GAAN,IAAAqJ,EAAA,OAAAC,EAAAzL,EAAAuC,KAAA,SAAAmJ,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACPJ,EAAUpI,EACZjB,EAAKkB,OACLlB,EAAKmB,SACLnB,EAAKoB,gBACLpB,EAAKqB,eACLrB,EAAKsB,WACLtB,EAAKuB,KAPIgI,EAAAE,KAAA,EAUL,IAAIC,QAAQ,SAAAC,GAAO,OAAIT,WAAWS,EAAS,OAVtC,OAWXtM,EAAKkH,SAAS,SAAAqF,GACZvM,EAAKC,MAAMuM,kBACTxM,EAAKC,MAAMuM,iBAAiBR,GAE9B,IAAI1J,EAAQiK,EAASjK,MAAMmK,QAE3B,OADAnK,EAAMoK,KAAKV,GACJ,CACL1J,QACAuI,wBAAwB,KAnBjB,wBAAAqB,EAAAS,SAAAZ,8DAwBba,iBAAmB,SAAC5K,EAAO6K,GACT,cAAZA,GAEJ7M,EAAKkH,SAAS,CACZ6D,WAAW,OAIf+B,wDAAoB,SAAAC,EAAMpK,GAAN,OAAAsJ,EAAAzL,EAAAuC,KAAA,SAAAiK,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAClBpM,EAAKkH,SAAS,SAAAqF,GACZ,IAAIU,EAAWV,EAASjK,MAAMmK,QAK9B,OAJiBQ,EAASC,KAAK,SAAAC,GAAC,OAAIA,EAAEpL,KAAKa,IAAMD,EAAKZ,KAAKa,KAEhDM,kBAAmB,EAEvB,CACL+J,cARcD,EAAAZ,KAAA,EAYZ,IAAIC,QAAQ,SAAAC,GAAO,OAAIT,WAAWS,EAAS,OAZ/B,OAclBtM,EAAKkH,SAAS,SAAAqF,GAKZ,MAAO,CACLjK,MALaiK,EAASjK,MACrBmK,QACA7G,OAAO,SAAAuH,GAAC,OAAIA,EAAEpL,KAAKa,KAAOD,EAAKZ,KAAKa,QAjBvB,wBAAAoK,EAAAL,SAAAI,8DAyBpBK,gBAAkB,SAAAzK,GAChB3C,EAAKkH,SAAS,CACZ4D,uBAAuB,EACvBE,aAAcrI,OAIlB0K,wDAAoB,SAAAC,EAAMC,GAAN,OAAAtB,EAAAzL,EAAAuC,KAAA,SAAAyK,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAApB,KAAA,EACZ,IAAIC,QAAQ,SAAAC,GAAO,OAAIT,WAAWS,EAAS,OAD/B,OAGlBtM,EAAKkH,SAAS,SAAAqF,GACZ,IAAIU,EAAWV,EAASjK,MAAMmK,QAC1BzB,EAAeuB,EAASvB,aAExByC,EAAcR,EAASS,UAAU,SAAAP,GAAC,OAAIA,EAAEpL,KAAKa,KAAO2K,EAAS3K,KAMjE,OAJAoI,EAAajJ,KAAOP,OAAOwE,OAAOgF,EAAajJ,KAAMwL,GAErDN,EAASQ,GAAelB,EAASvB,aAE1B,CACL1I,MAAO2K,EACPnC,uBAAuB,KAfT,wBAAA0C,EAAAb,SAAAW,oIAoBX,IACChN,EAAYF,KAAKH,MAAjBK,QADD4H,EASH9H,KAAKuG,MANPkE,EAHK3C,EAGL2C,uBACAvI,EAJK4F,EAIL5F,MACAyI,EALK7C,EAKL6C,UACAC,EANK9C,EAML8C,aACAF,EAPK5C,EAOL4C,sBACAG,EARK/C,EAQL+C,UAaF,OACE1K,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMI,UAAWR,EAAQ6H,MACvB5H,EAAAC,EAAAC,cAACwI,EAAD,CACErI,QAAQ,WACRqH,KAAM4C,EACNjD,OAAQxH,KAAK0L,WACbtE,SAAUpH,KAAKiL,eAEjB9K,EAAAC,EAAAC,cAACwI,EAAD,CACEhB,KAAM6C,EACNlK,QAAQ,UACR+B,KAAMqI,EACNpD,OAAQxH,KAAKiN,kBACb7F,SAAUpH,KAAKoL,sBAEjBjL,EAAAC,EAAAC,cAAC4C,EAAD,CACEhB,YA1BY,CAChB,KACA,uCACA,wFACA,wFACA,wFACA,mDACA,sBAoBIC,MAAOA,EACPH,YAAa/B,KAAK0M,kBAClB7K,UAAW7B,KAAKgN,kBAElB7M,EAAAC,EAAAC,cAAC+J,EAAD,CACEvC,KAAM8C,EACNnK,QAAQ,QACRwJ,QAASa,EACTd,QAAS/J,KAAKwM,mBAEhBrM,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEG,MAAM,YACNG,KAAK,SACLF,UAAWR,EAAQqN,OACnB1M,QAASb,KAAKgL,mBAEd7K,EAAAC,EAAAC,cAACS,EAAAV,EAAD,eApOYW,aA2OhByM,EAAgBvM,qBA7PP,SAAAC,GAAK,IAAAuM,EAAA,MAAK,CACvB1F,KAAM,CACJ2F,WAAiC,EAArBxM,EAAMgI,QAAQC,KAC1BwE,YAAkC,EAArBzM,EAAMgI,QAAQC,KAC3ByE,WAAiC,EAArB1M,EAAMgI,QAAQC,KAC1B5I,SAAU,WACV8C,OAAQ,QAEVkK,QAAME,EAAA,GAAArM,OAAAC,EAAA,EAAAD,CAAAqM,EACHvM,EAAMI,YAAYuM,KAAK,MAAQ,CAC9BrM,QAAS,SAFPJ,OAAAC,EAAA,EAAAD,CAAAqM,EAAA,WAIM,SAJNrM,OAAAC,EAAA,EAAAD,CAAAqM,EAAA,QAKwB,EAArBvM,EAAMgI,QAAQC,MALjB/H,OAAAC,EAAA,EAAAD,CAAAqM,EAAA,SAMyB,EAArBvM,EAAMgI,QAAQC,MANlBsE,KAqPcxM,CAAmBuJ,GCnPnCsD,6MACJvH,MAAQ,CACNwE,oBAAoB,KAGtBzD,gBAAkB,SAAAsE,GAChBhM,EAAKkH,SAAS,CACZiE,oBAAoB,OAIxBgD,kBAAoB,WAClBnO,EAAKkH,SAAS,CACZiE,oBAAoB,OAIxBpL,eAAiB,WACfC,EAAKkH,SAAS,CACZiE,oBAAoB,6EAIf,IACC7K,EAAYF,KAAKH,MAAjBK,QACA6K,EAAuB/K,KAAKuG,MAA5BwE,mBAER,OACE5K,EAAAC,EAAAC,cAAA,OAAKK,UAAWR,EAAQ6H,MACtB5H,EAAAC,EAAAC,cAACW,EAAD,CACEf,MAAM,sEACNH,WAAYE,KAAKL,iBAEnBQ,EAAAC,EAAAC,cAAA,OAAKK,UAAWR,EAAQ8N,cACtB7N,EAAAC,EAAAC,cAACmN,EAAD,CACEzC,mBAAoBA,EACpBqB,iBAAkBpM,KAAKsH,gBACvB4D,cAAelL,KAAK+N,6BArCdhN,aA6CHE,uBA3DA,SAAAC,GAAK,MAAK,CACvB6G,KAAM,CACJ1E,OAAQ,SAEV2K,aAAa5M,OAAAC,EAAA,EAAAD,CAAA,CACXwM,WAAY,GACZvK,OAAQ,OACR4K,UAAW,QACV/M,EAAMI,YAAYC,GAAG,MAAQ,CAC5BqM,WAAY,OAkDH3M,CAAmB6M,GCtDdI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACPrO,EAAAC,EAAAC,cAACF,EAAAC,EAAMqO,SAAP,KACEtO,EAAAC,EAAAC,cAACC,EAAA,EAAD,MACAH,EAAAC,EAAAC,cAACqO,EAAD,OAEFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtH,KAAK,SAAAuH,GACjCA,EAAaC","file":"static/js/main.67f565ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\nimport { withStyles, Toolbar, Typography, Fab } from '@material-ui/core';\r\nimport { AppBar as MaterialAppBar } from '@material-ui/core'\r\nimport PropTypes from 'prop-types'\r\nimport AddIcon from '@material-ui/icons/Add'\r\n\r\nconst styles = theme => ({\r\n  fabBtn: {\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none'\r\n    },\r\n    display: 'block',\r\n    position: 'absolute',\r\n    left: 'calc(50% - 24px)',\r\n    bottom: -24\r\n  }\r\n})\r\n\r\nclass AppBar extends Component {\r\n  static propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    title: PropTypes.string,\r\n    /**\r\n     * Fires when Add button is clicked\r\n     */\r\n    onAddClick: PropTypes.func\r\n  }\r\n\r\n  handleAddClick = () => {\r\n    this.props.onAddClick &&\r\n      this.props.onAddClick()\r\n  }\r\n\r\n  render() {\r\n    const { title, classes } = this.props\r\n    return (\r\n      <MaterialAppBar position='absolute'>\r\n        <Toolbar>\r\n          <Typography variant='h6' color='inherit'>\r\n            {title}\r\n          </Typography>\r\n          <Fab\r\n            color='secondary'\r\n            className={classes.fabBtn}\r\n            size='medium'\r\n            onClick={this.handleAddClick}\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n        </Toolbar>\r\n      </MaterialAppBar>\r\n    )\r\n  }\r\n}\r\n\r\nconst AppBarStyled = withStyles(styles)(AppBar)\r\n\r\nexport { AppBarStyled as AppBar }\r\n","import React, { Component } from 'react'\r\nimport { withStyles, Grid, Table, TableCell, TableRow, TableHead, TableBody, IconButton, CircularProgress } from '@material-ui/core';\r\nimport PropTypes from 'prop-types'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport RemoveIcon from '@material-ui/icons/Remove'\r\n\r\nconst styles = theme => ({\r\n  tableBtnContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: 44,\r\n    height: 44\r\n  }\r\n})\r\n\r\nclass TaskTable extends Component {\r\n  static propTypes = {\r\n    columnNames: PropTypes.array.isRequired,\r\n    tasks: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    editClick: PropTypes.func,\r\n    removeClick: PropTypes.func\r\n  }\r\n\r\n  handleEditBtnClick = data => event => {\r\n    this.props.editClick &&\r\n      this.props.editClick(data)\r\n  }\r\n\r\n  handleRemoveBtnClick = data => event => {\r\n    this.props.removeClick &&\r\n      this.props.removeClick(data)\r\n  }\r\n\r\n  render() {\r\n    const { classes, columnNames, tasks } = this.props\r\n\r\n    return (\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {\r\n              columnNames.map((name, i) => (\r\n                <TableCell key={i}>\r\n                  {name}\r\n                </TableCell>\r\n              ))\r\n            }\r\n            <TableCell>\r\n              Действия\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {\r\n            tasks.map(task => (\r\n              <TableRow key={task.data.id}>\r\n                {\r\n                  Object.keys(task.data).map((key, i) => (\r\n                    <TableCell key={i}>\r\n                      {task.data[key]}\r\n                    </TableCell>\r\n                  ))\r\n                }\r\n                <TableCell>\r\n                  <Grid container wrap='nowrap'>\r\n                    <IconButton onClick={this.handleEditBtnClick(task)}>\r\n                      <EditIcon fontSize='small'/>\r\n                    </IconButton>\r\n                    {\r\n                      task.isRemoveFetching ?\r\n                        <div className={classes.tableBtnContainer}>\r\n                          <CircularProgress size={32}/>\r\n                        </div>\r\n                      :\r\n                      <div className={classes.tableBtnContainer}>\r\n                        <IconButton onClick={this.handleRemoveBtnClick(task)}>\r\n                          <RemoveIcon fontSize='small'/>\r\n                        </IconButton>\r\n                      </div>\r\n                    }\r\n                  </Grid>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))\r\n          }\r\n        </TableBody>\r\n      </Table>\r\n    )\r\n  }\r\n}\r\n\r\nconst TaskTableStyled = withStyles(styles)(TaskTable)\r\n\r\nexport { TaskTableStyled as TaskTable }\r\n","let id = 0\r\n\r\nexport const getNextId = () => {\r\n  return id++\r\n}","import { getNextId } from \"./db\";\r\n\r\nexport const TASK_STATUS_PROCESSING = 'Выполняется'\r\nexport const TASK_STATUS_LATER = 'На потом'\r\nexport const TASK_STATUS_DONE = 'Выполнена'\r\nexport const DEFAULT_TAG_VALUES = [\r\n  'тэг0',\r\n  'тэг1',\r\n  'тэг2',\r\n  'тэг3'\r\n]\r\nexport const TASK_IMPORTANCE_1 = 'Срочная важная задача'\r\nexport const TASK_IMPORTANCE_2 = 'Срочная неважная задача'\r\nexport const TASK_IMPORTANCE_3 = 'Несрочная важная задача'\r\nexport const TASK_IMPORTANCE_4 = 'Несрочная неважная задача'\r\n\r\nexport const createTask = (status, taskName, taskDescription, completionDate, importance, tag) => {\r\n  return {\r\n    data: {\r\n      id: getNextId(), \r\n      status, \r\n      taskName, \r\n      taskDescription, \r\n      completionDate, \r\n      importance, \r\n      tag\r\n    },\r\n    isRemoveFetching: false\r\n  }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport Downshift from 'downshift'\r\nimport { TextField, Paper, MenuItem, withStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst styles = theme => ({\r\n  input: {\r\n    width: '100%'\r\n  }\r\n})\r\n\r\nconst Autocomplete = ({ onChange, classes, items, selectedItem, ...other }) => {\r\n  const [menuIsOpen, setMenuIsOpen] = useState(false)\r\n\r\n  const handleInputChange = e => {\r\n    onChange &&\r\n      onChange(e.target.value)\r\n\r\n    if (e.target.value.trim()) {\r\n      setMenuIsOpen(true)\r\n    }\r\n    else {\r\n      setMenuIsOpen(false)\r\n    }\r\n  }\r\n\r\n  const handleSelect = value => {\r\n    onChange &&   \r\n      onChange(value)\r\n\r\n    setMenuIsOpen(false)\r\n  }\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.keyCode === 13) {\r\n      setMenuIsOpen(false)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Close suggestions on clickaway\r\n   * in case where's less than two suggestion\r\n   */\r\n  const handleClickAway = () => {\r\n    if (items.filter(i => i.includes(selectedItem)).length < 2) {\r\n      setMenuIsOpen(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Downshift\r\n      isOpen={menuIsOpen}\r\n      onSelect={handleSelect}\r\n      onOuterClick={handleClickAway}\r\n    >\r\n    {\r\n      downshift => (\r\n        <div {...other}>\r\n          <TextField \r\n            {...downshift.getInputProps()} \r\n            label='Тэг' \r\n            className={classes.input}\r\n            onChange={handleInputChange}\r\n            onKeyDown={handleKeyDown}\r\n            value={selectedItem}\r\n          />\r\n          <Paper {...downshift.getMenuProps()}>\r\n          {\r\n            downshift.isOpen && (\r\n              items\r\n                .filter(item => item.includes(selectedItem) )\r\n                .map((item, i) => (\r\n                  <MenuItem\r\n                    {...downshift.getItemProps({\r\n                      key: item,\r\n                      index: i,\r\n                      item\r\n                    })}\r\n                  >\r\n                  {item}\r\n                  </MenuItem>\r\n                ))\r\n            )\r\n          }\r\n          </Paper>\r\n        </div>\r\n      )\r\n    }\r\n    </Downshift>\r\n  )\r\n}\r\n\r\nAutocomplete.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onChange: PropTypes.func,\r\n  items: PropTypes.array.isRequired,\r\n  selectedItem: PropTypes.string\r\n}\r\n\r\nconst AutocompleteStyled = withStyles(styles)(Autocomplete)\r\n\r\nexport { AutocompleteStyled as Autocomplete }","import React, { Component } from 'react'\r\nimport { withStyles, Drawer, Typography, TextField, Select, MenuItem, Grid, Button, LinearProgress, RadioGroup, FormControlLabel, Radio } from '@material-ui/core';\r\nimport PropTypes from 'prop-types'\r\nimport { TASK_STATUS_DONE, TASK_STATUS_LATER, TASK_STATUS_PROCESSING, DEFAULT_TAG_VALUES, TASK_IMPORTANCE_1, TASK_IMPORTANCE_3, TASK_IMPORTANCE_4, TASK_IMPORTANCE_2 } from '../../helpers/const';\r\nimport { Autocomplete } from '../autocomplete';\r\n\r\nconst EDITOR_VARIANT_CREATION = 'creation'\r\nconst EDITOR_VARIANT_EDITING = 'editing'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: 304,\r\n    position: 'relative',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  titleContainer: {\r\n    padding: 10,\r\n    backgroundColor: '#3f51b5',\r\n    color: 'white',\r\n    height: 80,\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  fieldsContainer: {\r\n    paddingLeft: theme.spacing.unit * 2,\r\n    paddingRight: theme.spacing.unit * 2,\r\n    flexGrow: 1,\r\n    maxHeight: '100%',\r\n    overflow: 'auto',\r\n    marginBottom: 72\r\n  },\r\n  field: {\r\n    width: '100%',\r\n    marginTop: 10,\r\n    marginBottom: 10\r\n  },\r\n  actionBtn: {\r\n    width: '100%',\r\n    height: '100%',\r\n    borderRadius: 0,\r\n    padding: theme.spacing.unit * 3\r\n  },\r\n  actionBtnContainer: {\r\n    position: 'absolute',\r\n    bottom: 0\r\n  },\r\n  progress: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    width: '100%'\r\n  }\r\n})\r\n\r\nclass TaskEditor extends Component {\r\n  static propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    onSave: PropTypes.func,\r\n    onCancel: PropTypes.func,\r\n    variant: PropTypes\r\n      .oneOf([\r\n        EDITOR_VARIANT_CREATION, \r\n        EDITOR_VARIANT_EDITING\r\n      ]).isRequired,\r\n    task: PropTypes.shape({\r\n      data: PropTypes.shape({\r\n        taskName: PropTypes.string.isRequired,\r\n        taskDescription: PropTypes.string,\r\n        completionDate: PropTypes.string,\r\n        status: PropTypes.string,\r\n        tag: PropTypes.string,\r\n        importance: PropTypes.string\r\n      }).isRequired\r\n    })\r\n  }\r\n\r\n  state = {\r\n    taskName: '',\r\n    taskNameError: false,\r\n    taskDescription: '',\r\n    completionDate: '',\r\n    status: TASK_STATUS_PROCESSING,\r\n    tag: '',\r\n    isFetching: false,\r\n    importance: '',\r\n    importanceHidden: true\r\n  }\r\n\r\n  componentWillReceiveProps = nextProps => {\r\n    if (nextProps.variant === EDITOR_VARIANT_EDITING &&\r\n      nextProps.task) {\r\n      let { \r\n        taskName, \r\n        taskDescription, \r\n        completionDate,\r\n        tag,\r\n        importance,\r\n        status\r\n      } = nextProps.task.data\r\n\r\n      this.setState({\r\n        taskName,\r\n        taskDescription,\r\n        completionDate,\r\n        tag,\r\n        importance,\r\n        status,\r\n        taskNameError: false,\r\n        importanceHidden: false\r\n      })\r\n    }\r\n  }\r\n\r\n  handleChange = name => event => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    })\r\n  }\r\n\r\n  handleTaskNameChange = e => {\r\n    this.setState({\r\n      taskName: e.target.value\r\n    })\r\n    if (e.target.value.trim()) {\r\n      this.setState({\r\n        taskNameError: false\r\n      })\r\n    }\r\n  }\r\n\r\n  handleDateChange = e => {\r\n    this.setState({\r\n      importanceHidden: false,\r\n      completionDate: e.target.value\r\n    })\r\n  }\r\n\r\n  handleTagChange = tag => {\r\n    this.setState({\r\n      tag\r\n    })\r\n  }\r\n\r\n  handleCancelClick = e => {\r\n    if (this.state.isFetching) return\r\n\r\n    this.props.onCancel &&\r\n      this.props.onCancel()\r\n  }\r\n\r\n  /**\r\n   * Validates all fields and hightlights them if neccessary.\r\n   * Returns true if model state is valid\r\n   */\r\n  modelStateIsValid = () => {\r\n    if (this.state.taskName.trim()) return true\r\n    \r\n    this.setState({\r\n      taskNameError: true\r\n    })\r\n\r\n    return false\r\n  }\r\n\r\n  handleSaveClick = e => {\r\n    if (!this.modelStateIsValid()) return\r\n\r\n    let task = {\r\n      status: this.state.status,\r\n      taskName: this.state.taskName,\r\n      taskDescription: this.state.taskDescription,\r\n      completionDate: this.state.completionDate,\r\n      importance: this.state.importance,\r\n      tag: this.state.tag\r\n    }\r\n\r\n    this.setState({\r\n      isFetching: true\r\n    })\r\n\r\n    let promise = this.props.onSave &&\r\n      this.props.onSave(task)\r\n\r\n    promise &&\r\n      promise\r\n        .then(() => {\r\n          this.setState({\r\n            isFetching: false\r\n          })\r\n          this._clearAllFields()\r\n        })\r\n  }\r\n\r\n  /**\r\n   * Vanishes all user input\r\n   */\r\n  _clearAllFields = () => {\r\n    this.setState({\r\n      taskName: '',\r\n      taskDescription: '',\r\n      completionDate: '',\r\n      status: TASK_STATUS_PROCESSING,\r\n      importanceHidden: true,\r\n      importance: '',\r\n      tag: ''\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Returns title of editor based on declared editor variant\r\n   */\r\n  _getTitle = () => {\r\n    switch (this.props.variant) {\r\n      case EDITOR_VARIANT_CREATION:\r\n        return 'Новая задача'\r\n      case EDITOR_VARIANT_EDITING:\r\n        return 'Редактирование'\r\n      default:\r\n        return ''\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns save button text based on declared editor variant\r\n   */\r\n  _getSaveBtnText = () => {\r\n    switch (this.props.variant) {\r\n      case EDITOR_VARIANT_CREATION:\r\n        return 'Создать'\r\n      case EDITOR_VARIANT_EDITING:\r\n        return 'Сохранить'\r\n      default:\r\n        return ''\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      open, \r\n      classes\r\n    } = this.props\r\n    const { \r\n      taskName, \r\n      taskDescription, \r\n      completionDate, \r\n      status,\r\n      isFetching, \r\n      importanceHidden, \r\n      importance, \r\n      taskNameError,\r\n      tag\r\n    } = this.state\r\n\r\n    return (\r\n      <Drawer open={open}>\r\n        <div className={classes.root}>\r\n          <div className={classes.titleContainer}>\r\n            <Typography variant='h6' color='inherit'>\r\n              {\r\n                this._getTitle()\r\n              }\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.fieldsContainer}>\r\n            <TextField\r\n              value={taskName}\r\n              onChange={this.handleTaskNameChange}\r\n              className={classes.field}\r\n              variant='outlined'\r\n              label='Название'\r\n              error={taskNameError}\r\n            />\r\n            <TextField\r\n              variant='outlined'\r\n              onChange={this.handleChange('taskDescription')}\r\n              multiline\r\n              label='Описание'\r\n              className={classes.field}\r\n              value={taskDescription}\r\n            />\r\n            <TextField\r\n              label='Дата завершения'\r\n              type='date'\r\n              value={completionDate}\r\n              onChange={this.handleDateChange}\r\n              className={classes.field}\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n            />\r\n            {\r\n              !importanceHidden &&\r\n              <RadioGroup\r\n                value={importance}\r\n                onChange={this.handleChange('importance')}\r\n              >\r\n                <FormControlLabel value={TASK_IMPORTANCE_1} control={<Radio />} label={TASK_IMPORTANCE_1} />\r\n                <FormControlLabel value={TASK_IMPORTANCE_2} control={<Radio />} label={TASK_IMPORTANCE_2} />\r\n                <FormControlLabel value={TASK_IMPORTANCE_3} control={<Radio />} label={TASK_IMPORTANCE_3} />\r\n                <FormControlLabel value={TASK_IMPORTANCE_4} control={<Radio />} label={TASK_IMPORTANCE_4} />\r\n              </RadioGroup>\r\n            }\r\n            <Select\r\n              className={classes.field}\r\n              value={status}\r\n              onChange={this.handleChange('status')}\r\n            >\r\n              <MenuItem value={TASK_STATUS_DONE}>{TASK_STATUS_DONE}</MenuItem>\r\n              <MenuItem value={TASK_STATUS_LATER}>{TASK_STATUS_LATER}</MenuItem>\r\n              <MenuItem value={TASK_STATUS_PROCESSING}>{TASK_STATUS_PROCESSING}</MenuItem>\r\n            </Select>\r\n            <Autocomplete\r\n              selectedItem={tag}\r\n              items={DEFAULT_TAG_VALUES}  \r\n              className={classes.field} \r\n              onChange={this.handleTagChange}\r\n            />\r\n          </div>\r\n          <Grid \r\n            container \r\n            className={classes.actionBtnContainer}\r\n          >\r\n            {\r\n              isFetching &&\r\n              <LinearProgress className={classes.progress} />\r\n            }\r\n            <Grid item xs={6}>\r\n              <Button\r\n                className={classes.actionBtn} \r\n                onClick={this.handleSaveClick}\r\n              >\r\n                {\r\n                  this._getSaveBtnText()\r\n                }\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Button \r\n                className={classes.actionBtn} \r\n                onClick={this.handleCancelClick}\r\n              >\r\n                Отмена\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Drawer>\r\n    )\r\n  }\r\n}\r\n\r\nconst TaskEditorStyled = withStyles(styles)(TaskEditor)\r\n\r\nexport { TaskEditorStyled as TaskEditor }\r\n","import React, { Component } from 'react'\r\nimport { withStyles, Snackbar as MaterialSnackbar, SnackbarContent, IconButton } from '@material-ui/core';\r\nimport PropTypes from 'prop-types'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nconst styles = theme => ({\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark\r\n  },\r\n  closeIcon: {\r\n    fontSize: 20\r\n  }\r\n})\r\n\r\nclass Snackbar extends Component {\r\n  static propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func,\r\n    message: PropTypes.string,\r\n    variant: PropTypes.oneOf(['error']).isRequired,\r\n  }\r\n  \r\n  handleClose = (event, reason) => {\r\n      this.props.onClose &&\r\n      this.props.onClose(event, reason)\r\n  }\r\n\r\n  render() {\r\n    const { classes, message, variant, ...other } = this.props\r\n    return (\r\n      <MaterialSnackbar \r\n        {...other}\r\n        onClose={this.handleClose}\r\n      >\r\n        <SnackbarContent\r\n          className={classes[variant]}\r\n          message={\r\n            <span className={classes.message}>\r\n              {message}\r\n            </span>\r\n          }\r\n          action={[\r\n            <IconButton\r\n              key='close'\r\n              color='inherit'\r\n              onClick={this.handleClose}\r\n            >\r\n              <CloseIcon className={classes.closeIcon}/>\r\n            </IconButton>\r\n          ]}\r\n        >\r\n        </SnackbarContent>\r\n      </MaterialSnackbar>\r\n    )\r\n  }\r\n}\r\n\r\nconst SnackbarStyled = withStyles(styles)(Snackbar)\r\n\r\nexport { SnackbarStyled as Snackbar }\r\n","import React, { Component } from 'react'\r\nimport { withStyles, Grid, Fab } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport PropTypes from 'prop-types'\r\nimport { TaskTable } from '../taskTable';\r\nimport { TaskEditor } from '../taskEditor';\r\nimport { Snackbar } from '../snackBar';\r\nimport { createTask } from '../../helpers/const';\r\n\r\nconst SNACK_DELAY = 1777\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    marginLeft: theme.spacing.unit * 2,\r\n    marginRight: theme.spacing.unit * 2,\r\n    paddingTop: theme.spacing.unit * 2,\r\n    position: 'relative',\r\n    height: '100%'\r\n  },\r\n  addBtn: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none'\r\n    },\r\n    position: 'fixed',\r\n    right: theme.spacing.unit * 4,\r\n    bottom: theme.spacing.unit * 4\r\n  }\r\n})\r\n\r\nclass TaskApp extends Component {\r\n  static propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    /**\r\n     * Fires when save task button is clicked\r\n     */\r\n    onCreateAddClick: PropTypes.func,\r\n    /**\r\n     * Defines creation editor state\r\n     */\r\n    creationEditorOpen: PropTypes.bool,\r\n    /**\r\n     * Fires when editor is closed\r\n     */\r\n    onEditorClose: PropTypes.func\r\n  }\r\n\r\n  state = {\r\n    taskEditorCreationOpen: false,\r\n    taskEditorEditingOpen: false,\r\n    snackOpen: false,\r\n    tasks: [],\r\n    selectedTask: null,\r\n    snackText: ''\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    // This place makes it possible \r\n    // to have editor tab controlled from outside\r\n    if (this.props.creationEditorOpen) {\r\n      this.setState({\r\n        taskEditorCreationOpen: this.props.creationEditorOpen\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps = nextProps => {\r\n    // This place makes it possible \r\n    // to have editor tab controlled from outside\r\n    if (nextProps.creationEditorOpen) {\r\n      this.setState({\r\n        taskEditorCreationOpen: nextProps.creationEditorOpen\r\n      })\r\n    }\r\n  }\r\n\r\n  handleAddBtnClick = event => {\r\n    this.onAddClick &&\r\n      this.onAddClick()\r\n\r\n    this.setState({\r\n      taskEditorCreationOpen: true\r\n    })\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.onEditorClose &&\r\n      this.props.onEditorClose()\r\n\r\n    this.setState({\r\n      taskEditorCreationOpen: false,\r\n      snackOpen: true\r\n    })\r\n\r\n    this._showSnack('Задача не сохранена')\r\n  }\r\n\r\n  handleEditingCancel = () => {\r\n    this.setState({\r\n      taskEditorEditingOpen: false,\r\n      selectedTask: null\r\n    })\r\n\r\n    this._showSnack('Изменения не сохранены')\r\n  }\r\n\r\n  _showSnack = (text, delay = SNACK_DELAY) => {\r\n    this.setState({\r\n      snackOpen: true,\r\n      snackText: text\r\n    })\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        snackOpen: false,\r\n        snackText: ''\r\n      })\r\n    }, delay)\r\n  }\r\n\r\n  handleSave = async task => {\r\n    let newTask = createTask(\r\n      task.status,\r\n      task.taskName,\r\n      task.taskDescription,\r\n      task.completionDate,\r\n      task.importance,\r\n      task.tag\r\n    )\r\n\r\n    await new Promise(resolve => setTimeout(resolve, 2000));\r\n    this.setState(oldState => {\r\n      this.props.onCreateAddClick &&\r\n        this.props.onCreateAddClick(newTask)\r\n\r\n      let tasks = oldState.tasks.slice();\r\n      tasks.push(newTask);\r\n      return {\r\n        tasks,\r\n        taskEditorCreationOpen: false\r\n      };\r\n    });\r\n  }\r\n\r\n  handleSnackClose = (event, resason) => {\r\n    if (resason === 'clickaway') return\r\n\r\n    this.setState({\r\n      snackOpen: false\r\n    })\r\n  }\r\n\r\n  handleRemoveClick = async task => {\r\n    this.setState(oldState => {\r\n      let newTasks = oldState.tasks.slice()\r\n      let targetTask = newTasks.find(t => t.data.id == task.data.id)\r\n\r\n      targetTask.isRemoveFetching = true\r\n\r\n      return {\r\n        newTasks\r\n      }\r\n    })\r\n\r\n    await new Promise(resolve => setTimeout(resolve, 2000))\r\n\r\n    this.setState(oldState => {\r\n      let newTasks = oldState.tasks\r\n        .slice()\r\n        .filter(t => t.data.id !== task.data.id);\r\n\r\n      return {\r\n        tasks: newTasks\r\n      };\r\n    });\r\n  }\r\n\r\n  handleEditClick = task => {\r\n    this.setState({\r\n      taskEditorEditingOpen: true,\r\n      selectedTask: task\r\n    })\r\n  }\r\n\r\n  handleEditingSave = async taskData => {\r\n    await new Promise(resolve => setTimeout(resolve, 2000))\r\n\r\n    this.setState(oldState => {\r\n      let newTasks = oldState.tasks.slice()\r\n      let selectedTask = oldState.selectedTask\r\n\r\n      let targetIndex = newTasks.findIndex(t => t.data.id === taskData.id)\r\n      // Provide selected task with new values\r\n      selectedTask.data = Object.assign(selectedTask.data, taskData)\r\n      \r\n      newTasks[targetIndex] = oldState.selectedTask\r\n\r\n      return {\r\n        tasks: newTasks,\r\n        taskEditorEditingOpen: false\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n    const { \r\n      taskEditorCreationOpen, \r\n      tasks, \r\n      snackOpen, \r\n      selectedTask, \r\n      taskEditorEditingOpen, \r\n      snackText \r\n    } = this.state\r\n\r\n    let columnNames = [\r\n      'id', \r\n      'Статус', \r\n      'Название задачи', \r\n      'Описание задачи', \r\n      'Дата выполнения', \r\n      'Важность', \r\n      'Тэг'\r\n    ]\r\n    \r\n    return (\r\n      <Grid className={classes.root}>\r\n        <TaskEditor \r\n          variant='creation'\r\n          open={taskEditorCreationOpen} \r\n          onSave={this.handleSave} \r\n          onCancel={this.handleCancel}\r\n        />\r\n        <TaskEditor\r\n          open={taskEditorEditingOpen}\r\n          variant='editing'\r\n          task={selectedTask}\r\n          onSave={this.handleEditingSave}\r\n          onCancel={this.handleEditingCancel}\r\n        />\r\n        <TaskTable \r\n          columnNames={columnNames} \r\n          tasks={tasks}\r\n          removeClick={this.handleRemoveClick}\r\n          editClick={this.handleEditClick}\r\n        />\r\n        <Snackbar \r\n          open={snackOpen} \r\n          variant='error'\r\n          message={snackText} \r\n          onClose={this.handleSnackClose}\r\n        />\r\n        <Fab \r\n          color='secondary' \r\n          size='medium' \r\n          className={classes.addBtn} \r\n          onClick={this.handleAddBtnClick}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nconst TaskAppStyled = withStyles(styles)(TaskApp)\r\n\r\nexport { TaskAppStyled as TaskApp }\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { AppBar } from './components/appBar';\nimport { TaskApp } from './components/taskApp';\nimport { withStyles } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    height: '100vh'\n  },\n  appContainer: {\n    paddingTop: 56,\n    height: '100%',\n    overflowX: 'auto',\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: 64\n    }\n  }\n})\n\nclass App extends Component {\n  state = {\n    creationEditorOpen: false\n  }\n\n  handleSaveClick = newTask => {\n    this.setState({\n      creationEditorOpen: false\n    })\n  }\n\n  handleEditorClose = () => {\n    this.setState({\n      creationEditorOpen: false\n    })\n  }\n\n  handleAddClick = () => {\n    this.setState({\n      creationEditorOpen: true\n    })\n  }\n\n  render() {\n    const { classes } = this.props\n    const { creationEditorOpen } = this.state\n\n    return (\n      <div className={classes.root}>\n        <AppBar \n          title=\"Список задач\" \n          onAddClick={this.handleAddClick}\n        />\n        <div className={classes.appContainer}>\n          <TaskApp \n            creationEditorOpen={creationEditorOpen} \n            onCreateAddClick={this.handleSaveClick} \n            onEditorClose={this.handleEditorClose}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { CssBaseline } from '@material-ui/core'\n\nReactDOM.render(\n  <React.Fragment>\n    <CssBaseline />\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}